<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            height: 100vh;
            background-color: #f5f5f5;
        }
        .sidebar {
            width: 300px;
            background-color: white;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            overflow-y: auto;
        }
        .main-content {
            flex: 1;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background-color: #f5f5f5;
        }
        h1 {
            color: #333;
            margin-top: 0;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            color: #555;
        }
        input[type="text"], textarea, select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        textarea {
            height: 100px;
            resize: vertical;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
        .image-container {
            max-width: 100%;
            max-height: calc(100vh - 40px);
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .image-container img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .loading {
            text-align: center;
            margin-top: 20px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <h1><%= title %></h1>
        
        <form id="generateForm">
            <div class="form-group">
                <label for="prompt">Prompt:</label>
                <textarea id="prompt" name="prompt" required><%= formData.prompt %></textarea>
            </div>
            
            <div class="form-group">
                <label for="negative">Negative Prompt:</label>
                <textarea id="negative" name="negative"><%= formData.negative %></textarea>
            </div>

            <div class="form-group">
                <label for="model">Model:</label>
                <select id="model" name="model">
                    <option value="">Select a model</option>
                    <% if (models && models.length > 0) { %>
                        <% models.forEach(function(model) { %>
                            <option value="<%= model %>" <%= formData.model === model ? 'selected' : '' %>><%= model %></option>
                        <% }); %>
                    <% } %>
                </select>
            </div>

            <div class="form-group">
                <label for="width">Width:</label>
                <input type="number" id="width" name="width" value="<%= formData.width || 832 %>" min="64" max="2048" step="64">
            </div>

            <div class="form-group">
                <label for="height">Height:</label>
                <input type="number" id="height" name="height" value="<%= formData.height || 1216 %>" min="64" max="2048" step="64">
            </div>

            <div class="form-group">
                <button type="button" id="swapDimensions" style="background-color: #666;">↔️ Swap Dimensions</button>
            </div>
            
            <button type="submit" id="generateButton">Generate Image</button>
        </form>

        <div class="loading" id="loading">
            Generating image... This may take a few minutes.
        </div>

        <div class="error" id="error" style="display: none;"></div>
    </div>

    <div class="main-content">
        <div class="image-container" id="imageContainer" style="display: none;">
            <img id="generatedImage" src="" alt="Generated Image">
        </div>
    </div>

    <script>
        let isGenerating = false;
        let currentFormData = null;

        // Add swap dimensions functionality
        document.getElementById('swapDimensions').addEventListener('click', function() {
            const widthInput = document.getElementById('width');
            const heightInput = document.getElementById('height');
            const temp = widthInput.value;
            widthInput.value = heightInput.value;
            heightInput.value = temp;
            saveFormData(); // Save the swapped values
        });

        // Load saved form data from localStorage
        function loadFormData() {
            const savedData = localStorage.getItem('comfyuiFormData');
            if (savedData) {
                const data = JSON.parse(savedData);
                document.getElementById('prompt').value = data.prompt || '';
                document.getElementById('negative').value = data.negative || '';
                document.getElementById('model').value = data.model || '';
                document.getElementById('width').value = data.width || 832;
                document.getElementById('height').value = data.height || 1216;
            }
        }

        // Save form data to localStorage
        function saveFormData() {
            const formData = {
                prompt: document.getElementById('prompt').value,
                negative: document.getElementById('negative').value,
                model: document.getElementById('model').value,
                width: document.getElementById('width').value,
                height: document.getElementById('height').value
            };
            localStorage.setItem('comfyuiFormData', JSON.stringify(formData));
        }

        // Load saved data when page loads
        document.addEventListener('DOMContentLoaded', loadFormData);

        // Save form data when any input changes
        document.querySelectorAll('#generateForm input, #generateForm textarea, #generateForm select').forEach(element => {
            element.addEventListener('change', saveFormData);
            element.addEventListener('input', saveFormData);
        });

        document.getElementById('generateForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            if (isGenerating) {
                return; // Prevent multiple submissions
            }

            const loading = document.getElementById('loading');
            const error = document.getElementById('error');
            const imageContainer = document.getElementById('imageContainer');
            const generatedImage = document.getElementById('generatedImage');
            const generateButton = document.getElementById('generateButton');
            
            loading.style.display = 'block';
            error.style.display = 'none';
            imageContainer.style.display = 'none';
            generateButton.disabled = true;
            isGenerating = true;
            
            // Store current form values
            currentFormData = {
                prompt: document.getElementById('prompt').value,
                negative: document.getElementById('negative').value,
                model: document.getElementById('model').value,
                width: document.getElementById('width').value,
                height: document.getElementById('height').value
            };
            
            fetch('/api/generate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(currentFormData)
            })
            .then(response => response.json())
            .then(data => {
                loading.style.display = 'none';
                generateButton.disabled = false;
                isGenerating = false;
                
                if (data.error) {
                    let errorMessage = data.error;
                    if (data.details) {
                        errorMessage += '\nDetails: ' + data.details;
                    }
                    if (data.stderr) {
                        errorMessage += '\nError output: ' + data.stderr;
                    }
                    error.textContent = errorMessage;
                    error.style.display = 'block';
                    return;
                }
                
                if (data.success) {
                    // Add timestamp to force browser to reload the image
                    generatedImage.src = data.imagePath + '?t=' + Date.now();
                    imageContainer.style.display = 'block';
                }
            })
            .catch(err => {
                loading.style.display = 'none';
                generateButton.disabled = false;
                isGenerating = false;
                error.textContent = 'An error occurred while generating the image: ' + err.message;
                error.style.display = 'block';
                console.error('Error:', err);
            });
        });
    </script>
</body>
</html> 